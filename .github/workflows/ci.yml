name: CI

on:
  push:
  pull_request:
    branches:
    - master
  schedule:
  - cron: '0 0 15 * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with: {submodules: true}
    - name: Install libblosc
      run: sudo apt-get install libblosc-dev
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt, clippy
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Documentation
      run: cargo doc
    - name: Clippy
      run: cargo clippy -- -D warnings

  test_apt:
    name: test apt
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        build:
        - stable
        - beta
        - nightly
        include:
        - build: stable
          rust: stable
        - build: beta
          rust: beta
        - build: nightly
          rust: nightly
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with: {submodules: false}

    - name: Install libblosc
      run: sudo apt-get install libblosc-dev

    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true

    - name: Build
      run: cargo build --verbose

    - name: Test
      run: cargo test --verbose

  conda:
    name: conda
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu, channel: conda-forge, rust: stable}
          - {os: macos, channel: conda-forge, rust: stable}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with: {submodules: true}
      - name: Install Rust (${{matrix.rust}})
        uses: actions-rs/toolchain@v1
        with: {toolchain: '${{matrix.rust}}', profile: minimal, override: true}
      - name: Install conda
        uses: goanpeca/setup-miniconda@v1
        with: {auto-update-conda: false, activate-environment: testenv}
      - name: Install libblosc
        run: conda install -y -c ${{matrix.channel}} blosc=1.19.0
      - name: Build and test
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CONDA_PREFIX/lib
          cargo test -vv
