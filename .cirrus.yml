setup: &FREEBSD_SETUP
  setup_script:
    - pkg install -y c-blosc rust

setup: &LINUX_SETUP
  setup_script:
    - apt update
    - apt-get -y install libblosc-dev

build: &BUILD
  cargo_cache:
    folder: $CARGO_HOME/registry
  build_script:
    - cargo build --all --verbose
  test_script:
    - cargo test --all --verbose

task:
  matrix:
    - name: Linux stable
      container:
        image: rust:latest
    - name: Linux nightly
      container:
        image: rustlang/rust:nightly
  << : *LINUX_SETUP
  << : *BUILD
  before_cache_script: rm -rf $CARGO_HOME/registry/index
 
task:
  name: FreeBSD 13 stable
  freebsd_instance:
    image: freebsd-13-1-release-amd64
  env:
    LD_LIBRARY_PATH: /usr/local/lib
  << : *FREEBSD_SETUP
  << : *BUILD
  before_cache_script: rm -rf $CARGO_HOME/registry/index

# The rust:1.34.0 container has an ancient version of libblosc which cannot
# pass the tests, so we must run "cargo check" only.
task:
  name: Linux MSRV
  container:
    image: rust:1.34.0
  << : *LINUX_SETUP
  build_script:
    - cargo check --all --all-targets
  before_cache_script: rm -rf $CARGO_HOME/registry/index
 
task:
  name: FreeBSD 13 stable
  freebsd_instance:
    image: freebsd-13-1-release-amd64
  env:
    LD_LIBRARY_PATH: /usr/local/lib
  << : *FREEBSD_SETUP
  << : *BUILD
  before_cache_script: rm -rf $CARGO_HOME/registry/index

task:
  name: Minver
  depends_on:
    - Linux MSRV
    - Linux stable
    - Linux nightly
    - FreeBSD 13 stable
  container:
    image: rustlang/rust:nightly
  << : *LINUX_SETUP
  cargo_cache:
    folder: $CARGO_HOME/registry
  build_script:
    - cargo update -Zminimal-versions
    - cargo check --all --all-targets
  before_cache_script: rm -rf $CARGO_HOME/registry/index
    
task:
  name: Lint
  depends_on:
    - Linux MSRV
    - Linux stable
    - Linux nightly
    - FreeBSD 13 stable
  container:
    image: rustlang/rust:nightly
  << : *LINUX_SETUP
  extra_setup_script:
    - cargo install cargo-audit
  cargo_cache:
    folder: $CARGO_HOME/registry
  build_script:
    - cargo clippy --all-targets
    - cargo audit
  before_cache_script: rm -rf $CARGO_HOME/registry/index
